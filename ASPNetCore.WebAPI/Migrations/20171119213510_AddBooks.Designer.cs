// <auto-generated />
using ASPNetCore.WebAPI.Presistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ASPNetCore.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171119213510_AddBooks")]
    partial class AddBooks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPNetCore.WebAPI.Core.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ASPNetCore.WebAPI.Core.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId");

                    b.Property<int>("BookId");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("ASPNetCore.WebAPI.Core.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriesId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("ASPNetCore.WebAPI.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ASPNetCore.WebAPI.Core.Models.AuthorBook", b =>
                {
                    b.HasOne("ASPNetCore.WebAPI.Core.Models.Author", "Author")
                        .WithMany("BooksLink")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ASPNetCore.WebAPI.Core.Models.Book", "Book")
                        .WithMany("AuthorsLink")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ASPNetCore.WebAPI.Core.Models.Book", b =>
                {
                    b.HasOne("ASPNetCore.WebAPI.Core.Models.Category", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId");
                });
#pragma warning restore 612, 618
        }
    }
}
